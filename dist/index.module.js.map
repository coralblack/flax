{"mappings":"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","sources":["./src/request.ts","./src/components/FxButton.tsx","./src/utils.ts","./src/components/FxGuard.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, {AxiosError, AxiosResponse, ResponseType} from 'axios';\nimport LRU from 'lru-cache';\nimport queryString from 'query-string';\nimport {MutableRefObject} from 'react';\n\nconst cache = new LRU({max: 100, maxAge: 1000 * 60 * 10});\n\ntype QueryType = string | number | boolean;\ntype Queries = {[key: string]: QueryType | QueryType[]};\ntype Headers = {[key: string]: string};\ntype DataTypeValues = string | number | boolean | null;\ntype DataType = {\n  [key: string]:\n    | DataTypeValues\n    | MutableRefObject<HTMLElement | null>\n    | DataType;\n};\ntype Data = DataType | (() => DataType) | string;\n\nexport interface FxApiRequest {\n  method: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  url: string;\n  cacheMaxAge?: number;\n  throttle?: boolean;\n  delay?: number;\n  responseType?: ResponseType;\n  query?: Queries;\n  headers?: Headers;\n  data?: Data;\n}\n\ninterface RequestProps extends FxApiRequest {\n  refreshId?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Resolver = (data: any) => void;\ntype Rejector = (reason: Error) => void;\n\nconst resolvers: {\n  [key: string]: Array<{resolve: Resolver; reject: Rejector}>;\n} = {};\nconst resolver = (\n  resolver: {resolve: Resolver; reject: Rejector},\n  key: string | null,\n  resp: AxiosResponse | null,\n  error: AxiosError | null\n) => {\n  if (!key) {\n    if (error) {\n      resolver.reject(error);\n    } else {\n      resolver.resolve({data: resp?.data, response: resp});\n    }\n    return;\n  }\n\n  const res = resolvers[key].splice(0, resolvers[key].length);\n\n  res.forEach(({resolve, reject}) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve({data: resp?.data, response: resp});\n    }\n  });\n};\n\nconst dataMapper = (data: DataType | string | null | undefined) => {\n  if (!data) return data;\n  if (typeof data !== 'object') return data;\n\n  return Object.keys(data).reduce<{[key: string]: any}>((p, c) => {\n    if (typeof data[c] === 'object') {\n      if ((data[c] as any).current instanceof HTMLElement) {\n        p[c] = (data[c] as any).current.value;\n      } else {\n        p[c] = dataMapper(data[c] as any);\n      }\n    } else {\n      p[c] = data[c];\n    }\n    return p;\n  }, {});\n};\n\nexport type FxResp<T> = {data: T; response: AxiosResponse};\n\nexport function request<TR>(props: RequestProps): Promise<FxResp<TR>> {\n  return new Promise<FxResp<TR>>((resolve, reject) => {\n    setTimeout(() => {\n      const url = ((u, query) => {\n        const qs = queryString.stringify(query);\n        return u + (qs ? (u.includes('?') ? '&' : '?') + qs : '');\n      })(props.url, props.query || {});\n\n      const cacheKey =\n        props.method === 'GET' && props.cacheMaxAge && props.cacheMaxAge > 0\n          ? ''\n          : null;\n      const cached = cacheKey && cache.get(cacheKey);\n      const lazyGroup =\n        props.method === 'GET' && props.throttle\n          ? `${props.method} ${url} ${props.delay || 0}`\n          : null;\n\n      if (lazyGroup) {\n        resolvers[lazyGroup] = resolvers[lazyGroup] || [];\n        resolvers[lazyGroup].push({resolve, reject});\n\n        // Duplicated `GET` request,\n        if (resolvers[lazyGroup].length > 1) {\n          return;\n        }\n      }\n\n      if (cached) {\n        resolve(cached);\n        return;\n      }\n\n      const start = new Date().getTime();\n\n      axios\n        .request<TR>({\n          method: props.method,\n          url,\n          headers: props.headers,\n          responseType: props.responseType,\n          data: dataMapper(\n            typeof props.data === 'function' ? props.data() : props.data\n          ),\n        })\n        .then(resp => {\n          const delay = (props.delay || 0) - (new Date().getTime() - start);\n\n          setTimeout(() => {\n            resolver({resolve, reject}, lazyGroup, resp, null);\n          }, Math.max(0, delay));\n        })\n        .catch(err => {\n          const delay = (props.delay || 0) - (new Date().getTime() - start);\n\n          setTimeout(() => {\n            resolver({resolve, reject}, lazyGroup, null, err);\n          }, Math.max(0, delay));\n        });\n    }, 25);\n  });\n}\n","import {AxiosResponse} from 'axios';\nimport React, {Component, ReactNode} from 'react';\nimport {FxApiRequest, request} from '../request';\n\ntype DoneDelegate<T> = (\n  res: T | null,\n  error: Error | null,\n  resp?: AxiosResponse | null\n) => void;\ntype SucceedDelegate<T> = (res: T, resp: AxiosResponse) => void;\ntype ErrorDelegate = (error: Error) => void;\n\ninterface FxButtonProps<T> {\n  children?: ReactNode;\n  className?: string;\n  label?: string;\n\n  api: FxApiRequest;\n  done?: DoneDelegate<T>;\n  success?: SucceedDelegate<T>;\n  error?: ErrorDelegate;\n}\n\ninterface FxButtonStates {\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxButton<T = any> extends Component<\n  FxButtonProps<T>,\n  FxButtonStates\n> {\n  constructor(props: FxButtonProps<T>) {\n    super(props);\n\n    this.state = {\n      busy: false,\n    };\n  }\n\n  handleClick() {\n    if (this.state.busy) return;\n\n    this.setState({...this.state, busy: true});\n\n    request<T>({...this.props.api})\n      .then(res => {\n        this.props.success && this.props.success(res.data, res.response);\n        this.props.done && this.props.done(res.data, null, res.response);\n        this.setState({...this.state, busy: false});\n      })\n      .catch(err => {\n        this.props.error && this.props.error(err);\n        this.props.done && this.props.done(null, err, null);\n        this.setState({...this.state, busy: false});\n      });\n  }\n\n  render() {\n    return (\n      <button\n        className=\"flax fx-button\"\n        onClick={() => this.handleClick()}\n        disabled={this.state.busy}\n      >\n        {this.props.children || this.props.label}\n      </button>\n    );\n  }\n}\n","export function classNames(\n  ...args: Array<\n    string | boolean | {[key: string]: boolean | undefined} | undefined | null\n  >\n): string {\n  return args\n    .reduce<Array<string>>((o, e) => {\n      if (typeof e === 'string' && e) o.push(e);\n      else if (Array.isArray(e)) o.push(classNames(e));\n      else if (e && typeof e === 'object') {\n        Object.keys(e).forEach(k => {\n          if (e[k]) o.push(k);\n        });\n      }\n\n      return o;\n    }, [])\n    .join(' ');\n}\n","import {AxiosError} from 'axios';\nimport React, {Component, Suspense, useEffect, useState} from 'react';\nimport {request, FxApiRequest, FxResp} from '../request';\nimport {classNames} from '../utils';\n\ntype Renderer<T> = (data: T) => React.ReactNode;\ntype ErrorRenderer<T> = (data: T, error: AxiosError<T>) => React.ReactNode;\ntype LoadingRenderer = () => React.ReactNode;\n\ntype LazyStatus = 'PENDING' | 'SUCCESS' | 'ERROR';\ninterface Lazy<TR, TE> {\n  status: LazyStatus;\n  error: AxiosError<TE> | null;\n  result: TR | null;\n}\n\nfunction lazyResponse<TR, TE>(\n  res: FxResp<TR> | null,\n  error: AxiosError<TE> | null\n): () => {status: LazyStatus; result: TR | null; error: AxiosError<TE> | null} {\n  return () => ({\n    status: error ? 'ERROR' : 'SUCCESS',\n    result: res?.data || null,\n    error: error,\n  });\n}\n\nconst lazy = function <TR, TE>(\n  release: ReleaseDelegateInternal,\n  p: Promise<FxResp<TR>>\n) {\n  let status: LazyStatus = 'PENDING';\n  let error: AxiosError<TE> | null;\n  let result: TR | null;\n\n  p.then(res => {\n    ({result, status, error} = lazyResponse<TR, TE>(res, null)());\n    release(true);\n  }).catch(err => {\n    ({result, status, error} = lazyResponse<TR, TE>(null, err)());\n    release(false);\n  });\n\n  return (): Lazy<TR, TE> => {\n    if (status === 'PENDING') throw p;\n\n    return {\n      status,\n      error,\n      result,\n    };\n  };\n};\n\ninterface FxGuardInnerProps<TR, TE> extends FxGuardProps<TR, TE> {\n  releaseBusy: ReleaseDelegateInternal;\n  refreshId: number;\n  reloadId: number;\n}\n\nfunction FxGuardInner<TR, TE>(props: FxGuardInnerProps<TR, TE>) {\n  const [prepared, setPrepared] = useState<Function>();\n  const {api, refreshId, reloadId, error, naked} = props;\n  const req = () => {\n    return request<TR>(\n      Object.assign(\n        {\n          throttle: api.throttle === false ? false : true,\n          refreshId,\n        },\n        props.api\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (reloadId > 0) {\n      req()\n        .then(res => {\n          setPrepared(() => lazyResponse<TR, TE>(res, null));\n          props.releaseBusy(true);\n        })\n        .catch(err => {\n          setPrepared(() => lazyResponse<TR, TE>(null, err));\n          props.releaseBusy(false);\n        });\n    }\n  }, [reloadId]);\n\n  useEffect(() => {\n    setPrepared(() => lazy<TR, TE>(props.releaseBusy, req()));\n  }, [api.method, api.url, refreshId]);\n\n  if (!prepared) return <></>;\n\n  const resp = prepared();\n\n  if (resp.status === 'ERROR') {\n    const r = () => (\n      <>\n        {error && error(resp.error?.response?.data || null, resp.error)}\n        {!error && <div>Error ({resp.error.message})</div>}\n      </>\n    );\n\n    return (\n      <>\n        {naked && r()}\n        {!naked && <div className=\"flax fx-guard-error\">r()</div>}\n      </>\n    );\n  }\n\n  return <>{props.render(resp.result)}</>;\n}\n\ninterface FxGuardProps<TR, TE = AxiosError> {\n  api: FxApiRequest;\n  render: Renderer<TR>;\n  error?: ErrorRenderer<TE>;\n  done?: ReleaseDelegate;\n  loading?: LoadingRenderer;\n  naked?: boolean;\n}\n\ntype ReleaseDelegate = (succeed?: boolean) => void;\ntype ReleaseDelegateInternal = (succeed: boolean) => void;\ninterface FxGuardStates {\n  refreshId: number;\n  reloadId: number;\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxGuard<TR = any, TE = any> extends Component<\n  FxGuardProps<TR, TE>,\n  FxGuardStates\n> {\n  constructor(props: FxGuardProps<TR, TE>) {\n    super(props);\n\n    this.state = {\n      refreshId: 0,\n      reloadId: 0,\n      busy: false,\n    };\n  }\n\n  reload(silent?: boolean) {\n    if (this.state.busy) return;\n\n    if (silent) {\n      this.setState({\n        ...this.state,\n        reloadId: this.state.reloadId + 1,\n        busy: true,\n      });\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      refreshId: this.state.refreshId + 1,\n      busy: true,\n    });\n  }\n\n  releaseBusy(succeed: boolean) {\n    if (this.props.done) {\n      this.props.done(succeed);\n    }\n\n    this.setState({\n      ...this.state,\n      busy: false,\n    });\n  }\n\n  render() {\n    const r = () => {\n      const rl = () => (\n        <>\n          {this.props.loading && this.props.loading()}\n          {!this.props.loading && (\n            <div className=\"flax fx-guard-loader\">Loading ..</div>\n          )}\n        </>\n      );\n\n      return (\n        <>\n          <Suspense\n            fallback={\n              <>\n                {this.props.naked && rl()}\n                {!this.props.naked && (\n                  <div className=\"flax fx-guard-loading\">{rl()}</div>\n                )}\n              </>\n            }\n          >\n            <FxGuardInner<TR, TE>\n              releaseBusy={succeed => this.releaseBusy(succeed)}\n              refreshId={this.state.refreshId}\n              reloadId={this.state.reloadId}\n              api={this.props.api}\n              render={this.props.render}\n              error={this.props.error}\n              naked={this.props.naked}\n            />\n          </Suspense>\n        </>\n      );\n    };\n\n    return (\n      <>\n        {this.props.naked && r()}\n        {!this.props.naked && (\n          <div\n            className={classNames('flax fx-guard', {\n              '--loading': this.state.busy,\n            })}\n          >\n            {r()}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n"],"names":["cache","LRU","max","maxAge","resolvers","resolver","key","resp","error","reject","resolve","data","response","splice","length","forEach","dataMapper","Object","keys","reduce","p","c","current","HTMLElement","value","request","props","Promise","setTimeout","url","u","query","qs","queryString","stringify","includes","cacheKey","method","cacheMaxAge","cached","get","lazyGroup","throttle","concat","delay","push","start","Date","getTime","axios","headers","responseType","then","Math","catch","err","FxButton","Component","constructor","super","this","state","busy","handleClick","setState","$cff2b6d75cbbcf34f8ecc2d690e62f7a$var$_objectSpread","$e37d50e173cfeed719d55c3076a8beab$export$request","api","res","success","done","render","_react","createElement","className","onClick","disabled","children","label","classNames","args","o","e","Array","isArray","k","join","lazyResponse","status","result","FxGuardInner","prepared","setPrepared","useState","refreshId","reloadId","naked","req","assign","useEffect","releaseBusy","release","lazy","Fragment","r","_resp$error","_resp$error$response","message","FxGuard","reload","silent","$b3391a37da12f524ec061e62849b526d$var$_objectSpread","succeed","rl","loading","Suspense","fallback","$b3391a37da12f524ec061e62849b526d$var$FxGuardInner","$b822a06f4acd7f086e665899dc946fe$export$classNames","--loading"],"version":3,"file":"index.module.js.map"}