{"mappings":"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","sources":["./src/utils.ts","./src/components/FxNotification.tsx","./src/components/FxNotificationContainer.tsx","./src/request.ts","./src/components/FxButton.tsx","./src/components/FxGuard.tsx"],"sourcesContent":["export function classNames(\n  ...args: Array<\n    string | boolean | {[key: string]: boolean | undefined} | undefined | null\n  >\n): string {\n  return args\n    .reduce<Array<string>>((o, e) => {\n      if (typeof e === 'string' && e) o.push(e);\n      else if (Array.isArray(e)) o.push(classNames(e));\n      else if (e && typeof e === 'object') {\n        Object.keys(e).forEach(k => {\n          if (e[k]) o.push(k);\n        });\n      }\n\n      return o;\n    }, [])\n    .join(' ');\n}\n","import React, {useEffect} from 'react';\nimport ReactDOM, {render} from 'react-dom';\nimport {useNotificationContainer} from './FxNotificationContainer';\nimport {classNames} from '../utils';\n\nexport type FxNotificationType = 'SUCC' | 'WARN' | 'ERROR' | 'INFO';\nexport interface FxNotificationPayload {\n  type?: FxNotificationType;\n  title?: string;\n  message: string;\n}\nexport interface FxNotificationAttrs extends FxNotificationPayload {\n  delay?: number;\n}\nexport type FxNotificationToast = string | FxNotificationPayload;\n\ninterface UseNotificationProps {}\ninterface UseNotification {\n  container: HTMLElement;\n  alert: (attrs: FxNotificationPayload) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useNotification(props: UseNotificationProps): UseNotification {\n  const {container} = useNotificationContainer();\n\n  return {\n    container,\n    alert: (attrs: FxNotificationAttrs) => {\n      const {delay, ...props} = attrs;\n      const wrapper = document.createElement('div');\n      wrapper.classList.add('fx-notification-wrapper');\n      container.appendChild(wrapper);\n      render(<FxNotification {...props} />, wrapper);\n\n      setTimeout(() => {\n        wrapper.classList.add('--hide');\n        setTimeout(() => {\n          ReactDOM.unmountComponentAtNode(wrapper);\n          wrapper.remove();\n        }, 450);\n      }, delay || 3000);\n    },\n  };\n}\n\nfunction Type(type: FxNotificationType) {\n  if (!type || type === 'INFO') return null;\n\n  return (\n    <div className=\"--icon\">\n      {type === 'SUCC' && (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n      )}\n      {type === 'WARN' && (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n          />\n        </svg>\n      )}\n      {type === 'ERROR' && (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      )}\n    </div>\n  );\n  //if (type === 'WARN') return <div>W</div>;\n  //if (type === 'ERROR') return <div>E</div>;\n}\n\ninterface FxNotificationProps extends FxNotificationPayload {}\n\nexport function FxNotification(props: FxNotificationProps) {\n  const {type, title, message} = props;\n\n  useEffect(() => {\n    // Initialize\n\n    return () => {\n      // Clear\n    };\n  });\n\n  return (\n    <>\n      <div\n        className={classNames(\n          'flax fx-notification',\n          `--${(type || 'info').toLocaleLowerCase()}`\n        )}\n      >\n        {type && Type(type)}\n        {title && <strong>{title}</strong>}\n        {message}\n      </div>\n    </>\n  );\n}\n","interface UseNotificationContainer {\n  container: HTMLElement;\n}\n\nconst fxNotificationContainerId = 'fx-notification-container';\nexport function useNotificationContainer(): UseNotificationContainer {\n  const container =\n    document.getElementById(fxNotificationContainerId) ||\n    (() => {\n      const dom = document.createElement('div');\n      dom.id = fxNotificationContainerId;\n      dom.classList.add('flax');\n      dom.classList.add('fx-notification-container');\n      document.body.appendChild(dom);\n\n      return dom;\n    })();\n\n  return {\n    container,\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, {AxiosError, AxiosResponse, ResponseType} from 'axios';\nimport LRU from 'lru-cache';\nimport queryString from 'query-string';\nimport {MutableRefObject} from 'react';\n\nconst cache = new LRU({max: 100, maxAge: 1000 * 60 * 10});\n\ntype QueryType = string | number | boolean;\ntype Queries = {[key: string]: QueryType | QueryType[]};\ntype Headers = {[key: string]: string};\ntype DataTypeValues = string | number | boolean | null;\ntype DataType = {\n  [key: string]:\n    | DataTypeValues\n    | MutableRefObject<HTMLElement | null>\n    | DataType;\n};\ntype Data = DataType | (() => DataType) | string;\n\nexport interface FxApiRequest {\n  method: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  url: string;\n  cacheMaxAge?: number;\n  throttle?: boolean;\n  delay?: number;\n  responseType?: ResponseType;\n  query?: Queries;\n  headers?: Headers;\n  data?: Data;\n}\n\ninterface RequestProps extends FxApiRequest {\n  refreshId?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Resolver = (data: any) => void;\ntype Rejector = (reason: Error) => void;\n\nconst resolvers: {\n  [key: string]: Array<{resolve: Resolver; reject: Rejector}>;\n} = {};\nconst resolver = (\n  resolver: {resolve: Resolver; reject: Rejector},\n  key: string | null,\n  resp: AxiosResponse | null,\n  error: AxiosError | null\n) => {\n  if (!key) {\n    if (error) {\n      resolver.reject(error);\n    } else {\n      resolver.resolve({data: resp?.data, response: resp});\n    }\n    return;\n  }\n\n  const res = resolvers[key].splice(0, resolvers[key].length);\n\n  res.forEach(({resolve, reject}) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve({data: resp?.data, response: resp});\n    }\n  });\n};\n\nconst dataMapper = (data: DataType | string | null | undefined) => {\n  if (!data) return data;\n  if (typeof data !== 'object') return data;\n\n  return Object.keys(data).reduce<{[key: string]: any}>((p, c) => {\n    if (typeof data[c] === 'object') {\n      if ((data[c] as any).current instanceof HTMLElement) {\n        p[c] = (data[c] as any).current.value;\n      } else {\n        p[c] = dataMapper(data[c] as any);\n      }\n    } else {\n      p[c] = data[c];\n    }\n    return p;\n  }, {});\n};\n\nexport type FxResp<T> = {data: T; response: AxiosResponse};\n\nexport function request<TR>(props: RequestProps): Promise<FxResp<TR>> {\n  return new Promise<FxResp<TR>>((resolve, reject) => {\n    setTimeout(() => {\n      const url = ((u, query) => {\n        const qs = queryString.stringify(query);\n        return u + (qs ? (u.includes('?') ? '&' : '?') + qs : '');\n      })(props.url, props.query || {});\n\n      const cacheKey =\n        props.method === 'GET' && props.cacheMaxAge && props.cacheMaxAge > 0\n          ? ''\n          : null;\n      const cached = cacheKey && cache.get(cacheKey);\n      const lazyGroup =\n        props.method === 'GET' && props.throttle\n          ? `${props.method} ${url} ${props.delay || 0}`\n          : null;\n\n      if (lazyGroup) {\n        resolvers[lazyGroup] = resolvers[lazyGroup] || [];\n        resolvers[lazyGroup].push({resolve, reject});\n\n        // Duplicated `GET` request,\n        if (resolvers[lazyGroup].length > 1) {\n          return;\n        }\n      }\n\n      if (cached) {\n        resolve(cached);\n        return;\n      }\n\n      const start = new Date().getTime();\n\n      axios\n        .request<TR>({\n          method: props.method,\n          url,\n          headers: props.headers,\n          responseType: props.responseType,\n          data: dataMapper(\n            typeof props.data === 'function' ? props.data() : props.data\n          ),\n        })\n        .then(resp => {\n          const delay = (props.delay || 0) - (new Date().getTime() - start);\n\n          setTimeout(() => {\n            resolver({resolve, reject}, lazyGroup, resp, null);\n          }, Math.max(0, delay));\n        })\n        .catch(err => {\n          const delay = (props.delay || 0) - (new Date().getTime() - start);\n\n          setTimeout(() => {\n            resolver({resolve, reject}, lazyGroup, null, err);\n          }, Math.max(0, delay));\n        });\n    }, 25);\n  });\n}\n","import {AxiosResponse} from 'axios';\nimport React, {Component, ReactNode} from 'react';\nimport {\n  FxNotificationType,\n  FxNotificationToast,\n  useNotification,\n} from './FxNotification';\nimport {FxApiRequest, request} from '../request';\n\nexport type Notifiable = FxNotificationToast | null | undefined | void;\nexport type DoneDelegate<T> = (\n  res: T | null,\n  error: Error | null,\n  resp?: AxiosResponse | null\n) => Notifiable;\nexport type SucceedDelegate<T> = (data: T, resp: AxiosResponse) => Notifiable;\nexport type ErrorDelegate<T> = (data: T, error: AxiosResponse<T>) => Notifiable;\n\ninterface FxButtonProps<TR, TE> {\n  children?: ReactNode;\n  className?: string;\n  label?: string;\n\n  api: FxApiRequest;\n  done?: DoneDelegate<TR>;\n  success?: SucceedDelegate<TR>;\n  error?: ErrorDelegate<TE>;\n}\n\ninterface FxButtonStates {\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxButton<TR = any, TE = any> extends Component<\n  FxButtonProps<TR, TE>,\n  FxButtonStates\n> {\n  constructor(props: FxButtonProps<TR, TE>) {\n    super(props);\n\n    this.state = {\n      busy: false,\n    };\n  }\n\n  private noti(payload: Notifiable, type: FxNotificationType) {\n    if (!payload) return;\n    if (typeof payload === 'string') {\n      payload = {\n        message: payload,\n      };\n    }\n\n    payload.type = payload.type || type;\n\n    const {alert: notiAlert} = useNotification({});\n    notiAlert(payload);\n  }\n\n  handleClick() {\n    if (this.state.busy) return;\n\n    this.setState({...this.state, busy: true});\n\n    const {success, error, done} = this.props;\n\n    request<TR>({...this.props.api})\n      .then(res => {\n        this.noti(success && success(res.data, res.response), 'SUCC');\n        this.noti(done && done(res.data, null, res.response), 'INFO');\n        this.setState({...this.state, busy: false});\n      })\n      .catch(err => {\n        const type =\n          typeof err.response?.status === 'number' && err.response?.status < 500\n            ? 'WARN'\n            : 'ERROR';\n        this.noti(error && error(err.response?.data, err), type);\n        this.noti(done && done(err.response?.data, err, err.response), type);\n        this.setState({...this.state, busy: false});\n      });\n  }\n\n  render() {\n    return (\n      <button\n        className=\"flax fx-button\"\n        onClick={() => this.handleClick()}\n        disabled={this.state.busy}\n      >\n        {this.props.children || this.props.label}\n      </button>\n    );\n  }\n}\n","import {AxiosError} from 'axios';\nimport React, {Component, Suspense, useEffect, useState} from 'react';\nimport {request, FxApiRequest, FxResp} from '../request';\nimport {classNames} from '../utils';\n\ntype Renderer<T> = (data: T) => React.ReactNode;\ntype ErrorRenderer<T> = (data: T, error: AxiosError<T>) => React.ReactNode;\ntype LoadingRenderer = () => React.ReactNode;\n\ntype LazyStatus = 'PENDING' | 'SUCCESS' | 'ERROR';\ninterface Lazy<TR, TE> {\n  status: LazyStatus;\n  error: AxiosError<TE> | null;\n  result: TR | null;\n}\n\nfunction lazyResponse<TR, TE>(\n  res: FxResp<TR> | null,\n  error: AxiosError<TE> | null\n): () => {status: LazyStatus; result: TR | null; error: AxiosError<TE> | null} {\n  return () => ({\n    status: error ? 'ERROR' : 'SUCCESS',\n    result: res?.data || null,\n    error: error,\n  });\n}\n\nconst lazy = function <TR, TE>(\n  release: ReleaseDelegateInternal,\n  p: Promise<FxResp<TR>>\n) {\n  let status: LazyStatus = 'PENDING';\n  let error: AxiosError<TE> | null;\n  let result: TR | null;\n\n  p.then(res => {\n    ({result, status, error} = lazyResponse<TR, TE>(res, null)());\n    release(true);\n  }).catch(err => {\n    ({result, status, error} = lazyResponse<TR, TE>(null, err)());\n    release(false);\n  });\n\n  return (): Lazy<TR, TE> => {\n    if (status === 'PENDING') throw p;\n\n    return {\n      status,\n      error,\n      result,\n    };\n  };\n};\n\ninterface FxGuardInnerProps<TR, TE> extends FxGuardProps<TR, TE> {\n  releaseBusy: ReleaseDelegateInternal;\n  refreshId: number;\n  reloadId: number;\n}\n\nfunction FxGuardInner<TR, TE>(props: FxGuardInnerProps<TR, TE>) {\n  const [prepared, setPrepared] = useState<Function>();\n  const {api, refreshId, reloadId, error, naked} = props;\n  const req = () => {\n    return request<TR>(\n      Object.assign(\n        {\n          throttle: api.throttle === false ? false : true,\n          refreshId,\n        },\n        props.api\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (reloadId > 0) {\n      req()\n        .then(res => {\n          setPrepared(() => lazyResponse<TR, TE>(res, null));\n          props.releaseBusy(true);\n        })\n        .catch(err => {\n          setPrepared(() => lazyResponse<TR, TE>(null, err));\n          props.releaseBusy(false);\n        });\n    }\n  }, [reloadId]);\n\n  useEffect(() => {\n    setPrepared(() => lazy<TR, TE>(props.releaseBusy, req()));\n  }, [api.method, api.url, refreshId]);\n\n  if (!prepared) return <></>;\n\n  const resp = prepared();\n\n  if (resp.status === 'ERROR') {\n    const r = () => (\n      <>\n        {error && error(resp.error?.response?.data || null, resp.error)}\n        {!error && <div>Error ({resp.error.message})</div>}\n      </>\n    );\n\n    return (\n      <>\n        {naked && r()}\n        {!naked && <div className=\"flax fx-guard-error\">r()</div>}\n      </>\n    );\n  }\n\n  return <>{props.render(resp.result)}</>;\n}\n\ninterface FxGuardProps<TR, TE = AxiosError> {\n  api: FxApiRequest;\n  render: Renderer<TR>;\n  error?: ErrorRenderer<TE>;\n  done?: ReleaseDelegate;\n  loading?: LoadingRenderer;\n  naked?: boolean;\n}\n\ntype ReleaseDelegate = (succeed?: boolean) => void;\ntype ReleaseDelegateInternal = (succeed: boolean) => void;\ninterface FxGuardStates {\n  refreshId: number;\n  reloadId: number;\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxGuard<TR = any, TE = any> extends Component<\n  FxGuardProps<TR, TE>,\n  FxGuardStates\n> {\n  constructor(props: FxGuardProps<TR, TE>) {\n    super(props);\n\n    this.state = {\n      refreshId: 0,\n      reloadId: 0,\n      busy: false,\n    };\n  }\n\n  reload(silent?: boolean) {\n    if (this.state.busy) return;\n\n    if (silent) {\n      this.setState({\n        ...this.state,\n        reloadId: this.state.reloadId + 1,\n        busy: true,\n      });\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      refreshId: this.state.refreshId + 1,\n      busy: true,\n    });\n  }\n\n  releaseBusy(succeed: boolean) {\n    if (this.props.done) {\n      this.props.done(succeed);\n    }\n\n    this.setState({\n      ...this.state,\n      busy: false,\n    });\n  }\n\n  render() {\n    const r = () => {\n      const rl = () => (\n        <>\n          {this.props.loading && this.props.loading()}\n          {!this.props.loading && (\n            <div className=\"flax fx-guard-loader\">Loading ..</div>\n          )}\n        </>\n      );\n\n      return (\n        <>\n          <Suspense\n            fallback={\n              <>\n                {this.props.naked && rl()}\n                {!this.props.naked && (\n                  <div className=\"flax fx-guard-loading\">{rl()}</div>\n                )}\n              </>\n            }\n          >\n            <FxGuardInner<TR, TE>\n              releaseBusy={succeed => this.releaseBusy(succeed)}\n              refreshId={this.state.refreshId}\n              reloadId={this.state.reloadId}\n              api={this.props.api}\n              render={this.props.render}\n              error={this.props.error}\n              naked={this.props.naked}\n            />\n          </Suspense>\n        </>\n      );\n    };\n\n    return (\n      <>\n        {this.props.naked && r()}\n        {!this.props.naked && (\n          <div\n            className={classNames('flax fx-guard', {\n              '--loading': this.state.busy,\n            })}\n          >\n            {r()}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n"],"names":["classNames","args","reduce","o","e","push","Array","isArray","Object","keys","forEach","k","join","useNotification","props","container","document","getElementById","dom","createElement","id","classList","add","body","appendChild","alert","attrs","delay","$e7fec36b5f3c6c5f72ba24052fba095$var$_objectWithoutProperties","wrapper","render","_react","$e7fec36b5f3c6c5f72ba24052fba095$export$FxNotification","setTimeout","ReactDOM","unmountComponentAtNode","remove","FxNotification","type","title","message","useEffect","Fragment","className","$b822a06f4acd7f086e665899dc946fe$export$classNames","concat","toLocaleLowerCase","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Type","cache","LRU","max","maxAge","resolvers","resolver","key","resp","error","reject","resolve","data","response","splice","length","dataMapper","p","c","current","HTMLElement","value","request","Promise","url","u","query","qs","queryString","stringify","includes","cacheKey","method","cacheMaxAge","cached","get","lazyGroup","throttle","start","Date","getTime","axios","headers","responseType","then","Math","catch","err","FxButton","Component","constructor","super","this","state","busy","noti","payload","notiAlert","$e7fec36b5f3c6c5f72ba24052fba095$export$useNotification","handleClick","setState","$cff2b6d75cbbcf34f8ecc2d690e62f7a$var$_objectSpread","success","done","$e37d50e173cfeed719d55c3076a8beab$export$request","api","res","_err$response","_err$response2","_err$response3","_err$response4","status","onClick","disabled","children","label","lazyResponse","result","FxGuardInner","prepared","setPrepared","useState","refreshId","reloadId","naked","req","assign","releaseBusy","release","lazy","r","_resp$error","_resp$error$response","FxGuard","reload","silent","$b3391a37da12f524ec061e62849b526d$var$_objectSpread","succeed","rl","loading","Suspense","fallback","$b3391a37da12f524ec061e62849b526d$var$FxGuardInner","--loading"],"version":3,"file":"index.module.js.map"}