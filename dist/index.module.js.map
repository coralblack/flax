{"mappings":"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","sources":["./src/components/FxButton.tsx","./src/request.ts","./src/components/FxGuard.tsx"],"sourcesContent":["import React from 'react';\n\ninterface FxButtonProps {}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function FxButton(_props: FxButtonProps) {\n  return <>FxButton</>;\n}\n","import axios, {AxiosResponse} from 'axios';\nimport LRU from 'lru-cache';\nimport queryString from 'query-string';\n\nconst cache = new LRU({max: 100, maxAge: 1000 * 60 * 10});\n\ntype QueryType = string | number | boolean;\ntype Query = {[key: string]: QueryType | QueryType[]};\nexport interface FxApiRequest {\n  method: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  url: string;\n  cacheMaxAge?: number;\n  throttle?: boolean;\n  delay?: number;\n  query?: Query;\n}\n\ninterface RequestProps extends FxApiRequest {\n  count: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Resolver = (data: any) => void;\ntype Rejector = (reason: Error) => void;\n\nconst resolvers: {\n  [key: string]: Array<{resolve: Resolver; reject: Rejector}>;\n} = {};\nconst resolver = (\n  resolver: {resolve: Resolver; reject: Rejector},\n  key: string | null,\n  resp: AxiosResponse | null,\n  error: Error | null\n) => {\n  if (!key) {\n    if (error) {\n      resolver.reject(error);\n    } else {\n      resolver.resolve({data: resp?.data, response: resp});\n    }\n    return;\n  }\n\n  const res = resolvers[key].splice(0, resolvers[key].length);\n\n  res.forEach(({resolve, reject}) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve({data: resp?.data, response: resp});\n    }\n  });\n};\n\nexport type FxResp<T> = {data: T; response: AxiosResponse};\n\nexport function request<T>(props: RequestProps): Promise<FxResp<T>> {\n  return new Promise<FxResp<T>>((resolve, reject) => {\n    setTimeout(() => {\n      const url = ((u, query) => {\n        const qs = queryString.stringify(query);\n        return u + (qs ? (u.includes('?') ? '&' : '?') + qs : '');\n      })(props.url, props.query || {});\n\n      const cacheKey =\n        props.method === 'GET' && props.cacheMaxAge && props.cacheMaxAge > 0\n          ? ''\n          : null;\n      const cached = cacheKey && cache.get(cacheKey);\n      const lazyGroup =\n        props.method === 'GET' && props.throttle\n          ? `${props.method} ${url}`\n          : null;\n\n      if (lazyGroup) {\n        resolvers[lazyGroup] = resolvers[lazyGroup] || [];\n        resolvers[lazyGroup].push({resolve, reject});\n\n        // Duplicated `GET` request,\n        if (resolvers[lazyGroup].length > 1) {\n          return;\n        }\n      }\n\n      if (cached) {\n        resolve(cached);\n        return;\n      }\n\n      setTimeout(() => {\n        axios\n          .request<T>({\n            method: props.method,\n            url,\n          })\n          .then(resp => {\n            resolver({resolve, reject}, lazyGroup, resp, null);\n          })\n          .catch(err => {\n            resolver({resolve, reject}, lazyGroup, null, err);\n          });\n      }, 25);\n    }, props.delay || 0);\n  });\n}\n","import React, {Component, Suspense, useEffect, useState} from 'react';\nimport {request, FxApiRequest, FxResp} from '../request';\n\ntype Renderer<T> = (data: T) => React.ReactNode;\n\ntype LazyStatus = 'PENDING' | 'SUCCESS' | 'ERROR';\ninterface Lazy<T> {\n  status: LazyStatus;\n  error: Error;\n  result: T;\n}\nconst lazy = function <T>(release: () => void, p: Promise<FxResp<T>>) {\n  let status: LazyStatus = 'PENDING';\n  let error: Error;\n  let result: T;\n\n  p.then(res => {\n    result = res.data;\n    status = 'SUCCESS';\n    release();\n  }).catch(err => {\n    error = err;\n    status = 'ERROR';\n    release();\n  });\n\n  return (): Lazy<T> => {\n    if (status === 'PENDING') throw p;\n\n    return {\n      status,\n      error,\n      result,\n    };\n  };\n};\n\ninterface FxGuardInnerProps<T> extends FxGuardProps<T> {\n  releaseBusy: () => void;\n  count: number;\n}\n\nfunction FxGuardInner<T>(props: FxGuardInnerProps<T>) {\n  const [prepared, setPrepared] = useState<Function>();\n  const {api, count} = props;\n\n  useEffect(() => {\n    setPrepared(() =>\n      lazy<T>(\n        props.releaseBusy,\n        request<T>(\n          Object.assign(\n            {\n              throttle: api.throttle === false ? false : true,\n              count,\n            },\n            props.api\n          )\n        )\n      )\n    );\n  }, [api.method, api.url, count]);\n\n  if (!prepared) return <></>;\n\n  const resp = prepared();\n\n  if (resp.status === 'ERROR') {\n    return (\n      <>\n        <div>Error ({resp.error.message})</div>\n      </>\n    );\n  }\n\n  return <>{props.render(resp.result)}</>;\n}\n\ninterface FxGuardProps<T> {\n  api: FxApiRequest;\n  render: Renderer<T>;\n}\n\ninterface FxGuardStates {\n  count: number;\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxGuard<T = any> extends Component<\n  FxGuardProps<T>,\n  FxGuardStates\n> {\n  constructor(props: FxGuardProps<T>) {\n    super(props);\n    this.state = {\n      count: 0,\n      busy: false,\n    };\n  }\n\n  reload() {\n    if (this.state.busy) return;\n\n    this.setState({\n      count: this.state.count + 1,\n      busy: true,\n    });\n  }\n\n  releaseBusy() {\n    this.setState({\n      ...this.state,\n      busy: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"fx-guard\">\n        <Suspense fallback={<div className=\"fx-guard-loader\">Loading ..</div>}>\n          <FxGuardInner<T>\n            releaseBusy={() => this.releaseBusy()}\n            count={this.state.count}\n            api={this.props.api}\n            render={this.props.render}\n          />\n        </Suspense>\n      </div>\n    );\n  }\n}\n"],"names":["FxButton","_props","_react","createElement","Fragment","cache","LRU","max","maxAge","resolvers","resolver","key","resp","error","reject","resolve","data","response","splice","length","forEach","FxGuardInner","props","prepared","setPrepared","useState","api","count","useEffect","release","p","result","status","then","res","catch","err","lazy","releaseBusy","Promise","setTimeout","url","u","query","qs","queryString","stringify","includes","cacheKey","method","cacheMaxAge","cached","get","lazyGroup","throttle","concat","push","axios","request","delay","$e37d50e173cfeed719d55c3076a8beab$export$request","Object","assign","message","render","FxGuard","Component","constructor","super","this","state","busy","reload","setState","$b3391a37da12f524ec061e62849b526d$var$_objectSpread","className","Suspense","fallback","$b3391a37da12f524ec061e62849b526d$var$FxGuardInner"],"version":3,"file":"index.module.js.map"}