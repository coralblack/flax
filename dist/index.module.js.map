{"mappings":"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","sources":["./src/request.ts","./src/components/FxButton.tsx","./src/components/FxGuard.tsx"],"sourcesContent":["import axios, {AxiosResponse} from 'axios';\nimport LRU from 'lru-cache';\nimport queryString from 'query-string';\n\nconst cache = new LRU({max: 100, maxAge: 1000 * 60 * 10});\n\ntype QueryType = string | number | boolean;\ntype Query = {[key: string]: QueryType | QueryType[]};\nexport interface FxApiRequest {\n  method: 'GET' | 'POST' | 'DELETE' | 'PATCH' | 'PUT';\n  url: string;\n  cacheMaxAge?: number;\n  throttle?: boolean;\n  delay?: number;\n  query?: Query;\n}\n\ninterface RequestProps extends FxApiRequest {\n  refreshId?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Resolver = (data: any) => void;\ntype Rejector = (reason: Error) => void;\n\nconst resolvers: {\n  [key: string]: Array<{resolve: Resolver; reject: Rejector}>;\n} = {};\nconst resolver = (\n  resolver: {resolve: Resolver; reject: Rejector},\n  key: string | null,\n  resp: AxiosResponse | null,\n  error: Error | null\n) => {\n  if (!key) {\n    if (error) {\n      resolver.reject(error);\n    } else {\n      resolver.resolve({data: resp?.data, response: resp});\n    }\n    return;\n  }\n\n  const res = resolvers[key].splice(0, resolvers[key].length);\n\n  res.forEach(({resolve, reject}) => {\n    if (error) {\n      reject(error);\n    } else {\n      resolve({data: resp?.data, response: resp});\n    }\n  });\n};\n\nexport type FxResp<T> = {data: T; response: AxiosResponse};\n\nexport function request<T>(props: RequestProps): Promise<FxResp<T>> {\n  return new Promise<FxResp<T>>((resolve, reject) => {\n    setTimeout(() => {\n      const url = ((u, query) => {\n        const qs = queryString.stringify(query);\n        return u + (qs ? (u.includes('?') ? '&' : '?') + qs : '');\n      })(props.url, props.query || {});\n\n      const cacheKey =\n        props.method === 'GET' && props.cacheMaxAge && props.cacheMaxAge > 0\n          ? ''\n          : null;\n      const cached = cacheKey && cache.get(cacheKey);\n      const lazyGroup =\n        props.method === 'GET' && props.throttle\n          ? `${props.method} ${url}`\n          : null;\n\n      if (lazyGroup) {\n        resolvers[lazyGroup] = resolvers[lazyGroup] || [];\n        resolvers[lazyGroup].push({resolve, reject});\n\n        // Duplicated `GET` request,\n        if (resolvers[lazyGroup].length > 1) {\n          return;\n        }\n      }\n\n      if (cached) {\n        resolve(cached);\n        return;\n      }\n\n      setTimeout(() => {\n        axios\n          .request<T>({\n            method: props.method,\n            url,\n          })\n          .then(resp => {\n            resolver({resolve, reject}, lazyGroup, resp, null);\n          })\n          .catch(err => {\n            resolver({resolve, reject}, lazyGroup, null, err);\n          });\n      }, 25);\n    }, props.delay || 0);\n  });\n}\n","import {AxiosResponse} from 'axios';\nimport React, {Component, ReactNode} from 'react';\nimport {FxApiRequest, request} from '../request';\n\ntype DoneDelegate<T> = (\n  res: T | null,\n  error: Error | null,\n  resp?: AxiosResponse | null\n) => void;\ntype SucceedDelegate<T> = (res: T, resp: AxiosResponse) => void;\ntype ErrorDelegate = (error: Error) => void;\n\ninterface FxButtonProps<T> {\n  children?: ReactNode;\n  className?: string;\n  label?: string;\n\n  api: FxApiRequest;\n  done?: DoneDelegate<T>;\n  success?: SucceedDelegate<T>;\n  error?: ErrorDelegate;\n}\n\ninterface FxButtonStates {\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxButton<T = any> extends Component<\n  FxButtonProps<T>,\n  FxButtonStates\n> {\n  constructor(props: FxButtonProps<T>) {\n    super(props);\n\n    this.state = {\n      busy: false,\n    };\n  }\n\n  handleClick() {\n    if (this.state.busy) return;\n\n    this.setState({...this.state, busy: true});\n\n    request<T>({...this.props.api})\n      .then(res => {\n        this.props.success && this.props.success(res.data, res.response);\n        this.props.done && this.props.done(res.data, null, res.response);\n        this.setState({...this.state, busy: false});\n      })\n      .catch(err => {\n        this.props.error && this.props.error(err);\n        this.props.done && this.props.done(null, err, null);\n        this.setState({...this.state, busy: false});\n      });\n  }\n\n  render() {\n    return (\n      <button\n        className=\"fx-button\"\n        onClick={() => this.handleClick()}\n        disabled={this.state.busy}\n      >\n        {this.props.children || this.props.label}\n      </button>\n    );\n  }\n}\n","import React, {Component, Suspense, useEffect, useState} from 'react';\nimport {request, FxApiRequest, FxResp} from '../request';\n\ntype Renderer<T> = (data: T) => React.ReactNode;\n\ntype LazyStatus = 'PENDING' | 'SUCCESS' | 'ERROR';\ninterface Lazy<T> {\n  status: LazyStatus;\n  error: Error | null;\n  result: T | null;\n}\n\nfunction lazyResponse<T>(\n  res: FxResp<T> | null,\n  error: Error | null\n): () => {status: LazyStatus; result: T | null; error: Error | null} {\n  return () => ({\n    status: error ? 'ERROR' : 'SUCCESS',\n    result: res?.data || null,\n    error: error,\n  });\n}\n\nconst lazy = function <T>(\n  release: ReleaseDelegateInternal,\n  p: Promise<FxResp<T>>\n) {\n  let status: LazyStatus = 'PENDING';\n  let error: Error | null;\n  let result: T | null;\n\n  p.then(res => {\n    ({result, status, error} = lazyResponse<T>(res, null)());\n    release(true);\n  }).catch(err => {\n    ({result, status, error} = lazyResponse<T>(null, err)());\n    release(false);\n  });\n\n  return (): Lazy<T> => {\n    if (status === 'PENDING') throw p;\n\n    return {\n      status,\n      error,\n      result,\n    };\n  };\n};\n\ninterface FxGuardInnerProps<T> extends FxGuardProps<T> {\n  releaseBusy: ReleaseDelegateInternal;\n  refreshId: number;\n  reloadId: number;\n}\n\nfunction FxGuardInner<T>(props: FxGuardInnerProps<T>) {\n  const [prepared, setPrepared] = useState<Function>();\n  const {api, refreshId, reloadId} = props;\n  const req = () => {\n    return request<T>(\n      Object.assign(\n        {\n          throttle: api.throttle === false ? false : true,\n          refreshId,\n        },\n        props.api\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (reloadId > 0) {\n      req()\n        .then(res => {\n          setPrepared(() => lazyResponse<T>(res, null));\n          props.releaseBusy(true);\n        })\n        .catch(err => {\n          setPrepared(() => lazyResponse<T>(null, err));\n          props.releaseBusy(false);\n        });\n    }\n  }, [reloadId]);\n\n  useEffect(() => {\n    setPrepared(() => lazy<T>(props.releaseBusy, req()));\n  }, [api.method, api.url, refreshId]);\n\n  if (!prepared) return <></>;\n\n  const resp = prepared();\n\n  if (resp.status === 'ERROR') {\n    return (\n      <>\n        <div>Error ({resp.error.message})</div>\n      </>\n    );\n  }\n\n  return <>{props.render(resp.result)}</>;\n}\n\ninterface FxGuardProps<T> {\n  api: FxApiRequest;\n  render: Renderer<T>;\n  done?: ReleaseDelegate;\n}\n\ntype ReleaseDelegate = (succeed?: boolean) => void;\ntype ReleaseDelegateInternal = (succeed: boolean) => void;\ninterface FxGuardStates {\n  refreshId: number;\n  reloadId: number;\n  busy: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class FxGuard<T = any> extends Component<\n  FxGuardProps<T>,\n  FxGuardStates\n> {\n  constructor(props: FxGuardProps<T>) {\n    super(props);\n\n    this.state = {\n      refreshId: 0,\n      reloadId: 0,\n      busy: false,\n    };\n  }\n\n  reload(silent?: boolean) {\n    if (this.state.busy) return;\n\n    if (silent) {\n      this.setState({\n        ...this.state,\n        reloadId: this.state.reloadId + 1,\n        busy: true,\n      });\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      refreshId: this.state.refreshId + 1,\n      busy: true,\n    });\n  }\n\n  releaseBusy(succeed: boolean) {\n    if (this.props.done) {\n      this.props.done(succeed);\n    }\n\n    this.setState({\n      ...this.state,\n      busy: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"fx-guard\">\n        <Suspense fallback={<div className=\"fx-guard-loader\">Loading ..</div>}>\n          <FxGuardInner<T>\n            releaseBusy={succeed => this.releaseBusy(succeed)}\n            refreshId={this.state.refreshId}\n            reloadId={this.state.reloadId}\n            api={this.props.api}\n            render={this.props.render}\n          />\n        </Suspense>\n      </div>\n    );\n  }\n}\n"],"names":["cache","LRU","max","maxAge","resolvers","resolver","key","resp","error","reject","resolve","data","response","splice","length","forEach","request","props","Promise","setTimeout","url","u","query","qs","queryString","stringify","includes","cacheKey","method","cacheMaxAge","cached","get","lazyGroup","throttle","concat","push","axios","then","catch","err","delay","FxButton","Component","constructor","super","this","state","busy","handleClick","setState","$cff2b6d75cbbcf34f8ecc2d690e62f7a$var$_objectSpread","$e37d50e173cfeed719d55c3076a8beab$export$request","api","res","success","done","render","_react","createElement","className","onClick","disabled","children","label","lazyResponse","status","result","FxGuardInner","prepared","setPrepared","useState","refreshId","reloadId","req","Object","assign","useEffect","releaseBusy","release","p","lazy","Fragment","message","FxGuard","reload","silent","$b3391a37da12f524ec061e62849b526d$var$_objectSpread","succeed","Suspense","fallback","$b3391a37da12f524ec061e62849b526d$var$FxGuardInner"],"version":3,"file":"index.module.js.map"}